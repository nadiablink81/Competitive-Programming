import java.io.*;
import java.util.*;

class maze1 {

    static int W, H;
    static char[][] ar;
    static int[][] cnt;

  public static void main (String [] args) throws IOException {
    BufferedReader f = new BufferedReader(new FileReader("maze1.in"));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("maze1.out")));

    StringTokenizer st = new StringTokenizer(f.readLine());
    W = Integer.parseInt(st.nextToken());
    H = Integer.parseInt(st.nextToken());
    ar = new char[2*H+1][2*W+1];

    int x1 = -1;
    int y1= -1;
    int x2 = -1;
    int y2 = -1;

    for (int i = 0; i < ar.length; i++) {
        String s = f.readLine();
        for (int j = 0; j < s.length(); j++) {
            ar[i][j] = s.charAt(j);
            if (ar[i][j] == ' ') {
                if (i == 0 || i == (ar.length-1) || j == 0 || j == (ar[0].length-1)) {
                    if (x1 == -1) {
                        x1 = i;
                        y1 = j;
                    } else {
                        x2 = i;
                        y2 = j;
                    }
                } 
            }
        }
    }

    // for (char[] v : ar) System.out.println(Arrays.toString(v));

    // System.out.println(x1 + " " + y1);
    // System.out.println(x2 + " " + y2);

    cnt = new int[2*H+1][2*W+1];
    cnt[x1][y1] = 1;
    cnt[x2][y2] = 1;
    dfs(x1, y1, 1);
    dfs(x2, y2, 1);

    // for (int[] v : cnt) System.out.println(Arrays.toString(v));
    int ans = -1;
    for (int i = 0; i < cnt.length; i++) {
        for (int j = 0; j < cnt[0].length; j++) {
            if (cnt[i][j] != 0) {
                ans = Math.max(ans, cnt[i][j]);
            }
        }
    }

    System.out.println(ans/2);
    out.println(ans/2);

    out.close();
  }

  static void dfs(int x, int y, int a) {
        if (x != 0) {
          if (ar[x-1][y] == ' ') {
              if (cnt[x-1][y] > a+1 || cnt[x-1][y] == 0) {
                cnt[x-1][y] = a+1;
                dfs(x-1, y, a+1);
              }
          }
        }
        if (x != ar.length-1) {
            if (ar[x+1][y] == ' ') {
                if (cnt[x+1][y] > a+1 || cnt[x+1][y] == 0) {
                    cnt[x+1][y] = a+1;
                    dfs(x+1, y, a+1);
                }
            }
        }
        if (y != 0) {
            if (ar[x][y-1] == ' ') {
                if (cnt[x][y-1] > a+1 || cnt[x][y-1] == 0) {
                    cnt[x][y-1] = a+1;
                    dfs(x, y-1, a+1);
                }
            }
        }
        if (y != ar[0].length-1) {
            if (ar[x][y+1] == ' ') {
                if (cnt[x][y+1] > a+1 || cnt[x][y+1] == 0) {
                    cnt[x][y+1] = a+1;
                    dfs(x, y+1, a+1);
                }
            }
        }
  }

}
